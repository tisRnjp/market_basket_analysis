@model Major_Project.Models.Order

@{
    ViewBag.Title = "Checkout";
}

<h2>Checkout</h2>

@if (ViewBag.Cart == null)
{
    <div class="alert alert-warning">
        <p>@ViewBag.ResultMessage</p>
    </div>
}
else
{
    Html.BeginForm();
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Order</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*Field for username*@
            <div class="form-group">
                @Html.LabelFor(model => model.User.Name, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("userName", (string)ViewBag.CurrentUsername, htmlAttributes: new { disabled = "true", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
                </div>
            </div>


            @*Field for user email*@
            <div class="form-group">
                @Html.LabelFor(model => model.User.UserName, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("email", User.Identity.Name, htmlAttributes: new { disabled = "true", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
                </div>
            </div>


            @*hidden field for UserId*@
            <div class="form-group">
                @Html.HiddenFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2", Value = (string)@ViewBag.UserId })
            </div>


            @*Hidden field for TotalPrice*@
            <div class="form-group">
                @Html.HiddenFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2", Value = @ViewBag.Cart.TotalPrice })
            </div>

            @*Field for Ordershipped*@
            <div class="form-group">
                @Html.LabelFor(model => model.OrderShipped, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.OrderShipped)
                        @Html.ValidationMessageFor(model => model.OrderShipped, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            @*Field for date time*@
            <div class="form-group">
                @Html.LabelFor(model => model.OrderDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.OrderDateTime, htmlAttributes: new { disabled = "true", @class = "form-control", @Value= (DateTime)@DateTime.Now })
                    @Html.ValidationMessageFor(model => model.OrderDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Field for address1*@
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Field for address2*@
            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Field for town*@
            <div class="form-group">
                @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
                </div>
            </div>

            @*field for country*@
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            @*field for postal code*@
            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Cart items*@
            @Html.Partial("Cart", (Major_Project.Models.CartViewModel)ViewBag.Cart)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Done" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
